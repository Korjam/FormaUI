<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:controls="clr-namespace:FluentUI.Controls">

  <ControlTemplate x:Key="ChromeButtonTemplate"
    TargetType="{x:Type Button}">

    <Grid>

      <Border
        x:Name="background"
        Background="{TemplateBinding Background}"
        BorderThickness="0"
        SnapsToDevicePixels="True" />

      <Border
        x:Name="border"
        BorderThickness="{TemplateBinding BorderThickness}"
        BorderBrush="{TemplateBinding BorderBrush}"
        CornerRadius="3"
        SnapsToDevicePixels="True" />

      <ContentPresenter
        x:Name="contentPresenter"
        RecognizesAccessKey="True"
        Margin="{TemplateBinding Padding}"
        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
        Focusable="False" />

    </Grid>
  </ControlTemplate>

  <Style x:Key="ChromeButtonStyle"
         TargetType="{x:Type Button}">
    <Setter Property="FontFamily" Value="{DynamicResource IconsFontFamily}" />
    <Setter Property="FontSize" Value="10" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
    
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    
    <Setter Property="Background" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Width" Value="46" />
    <Setter Property="Height" Value="32" />
    <Setter Property="Template" Value="{DynamicResource ChromeButtonTemplate}" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="CaptionButtonStyle"
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource ChromeButtonStyle}" />

  <Style x:Key="CloseButtonStyle"
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource ChromeButtonStyle}">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource ShellCaptionCloseFillColorPrimaryBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ShellCaptionCloseTextColorPrimaryBrush}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource ShellCaptionCloseFillColorSecondaryBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ShellCaptionCloseTextColorSecondaryBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <ControlTemplate x:Key="WindowTemplateKey"
                   TargetType="{x:Type Window}">
    <Border Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
      <Grid>
        <AdornerDecorator>
          <ContentPresenter />
        </AdornerDecorator>

        <ResizeGrip x:Name="WindowResizeGrip"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Visibility="Collapsed"
                    IsTabStop="False" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Window.ResizeMode"
                     Value="CanResizeWithGrip" />
          <Condition Property="Window.WindowState"
                     Value="Normal" />
        </MultiTrigger.Conditions>
        <Setter TargetName="WindowResizeGrip"
                Property="Visibility"
                Value="Visible" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="{x:Type Window}"
         TargetType="{x:Type Window}">
    <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}" />
    <!--
    <Setter Property="FontSize" Value="{DynamicResource CaptionFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource CaptionFontWeight}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    -->
    <Setter Property="Background" Value="{DynamicResource MicaBackgroundFillColorBaseBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource SurfaceStrokeColorDefaultSnappedWindowsBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="WindowChrome.WindowChrome">
      <Setter.Value>
        <WindowChrome CaptionHeight="32"
                      NonClientFrameEdges="None"
                      UseAeroCaptionButtons="False" />
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Window}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid Margin="{TemplateBinding Padding}">
              
              <Grid.RowDefinitions>
                <RowDefinition Height="32" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>

              <Grid Grid.Row="0"
                    Margin="12,0,0,0"
                    VerticalAlignment="Center">

                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="16" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Border x:Name="iconPlaceHolder"
                        Grid.Column="0"
                        BorderThickness="1"
                        BorderBrush="{DynamicResource TextFillColorPrimaryBrush}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Height="16"
                        Width="16"
                        CornerRadius="8" />

                <TextBlock Grid.Column="2"
                           Padding="0,0,0,2"
                           Margin="0,0,8,0"
                           VerticalAlignment="Center"
                           Text="{TemplateBinding Title}"
                           FontFamily="{DynamicResource ControlFontFamily}"
                           FontSize="{DynamicResource CaptionFontSize}"
                           FontWeight="{DynamicResource CaptionFontWeight}"
                           Foreground="{DynamicResource TextFillColorPrimaryBrush}" />

                <StackPanel Grid.Column="4"
                            Orientation="Horizontal"
                            WindowChrome.IsHitTestVisibleInChrome="True">
                  <Button x:Name="MinimizeButton"
                          Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}" 
                          Content="&#xE921;"
                          Style="{DynamicResource CaptionButtonStyle}" />
                  <Button x:Name="MaximizeButton"
                          Command="{Binding Source={x:Static SystemCommands.MaximizeWindowCommand}}" 
                          Content="&#xE922;"
                          Style="{DynamicResource CaptionButtonStyle}" />
                  <Button x:Name="RestoreButton"
                          Command="{Binding Source={x:Static SystemCommands.RestoreWindowCommand}}" 
                          Content="&#xE923;"
                          Style="{DynamicResource CaptionButtonStyle}" />
                  <Button x:Name="CloseButton"
                          Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}" 
                          Content="&#xE8BB;"
                          Style="{DynamicResource CloseButtonStyle}" />
                </StackPanel>
              </Grid>

              <AdornerDecorator Grid.Row="1">
                <ContentPresenter />
              </AdornerDecorator>
              
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="WindowState" Value="Normal">
              <Setter TargetName="RestoreButton" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="MaximizeButton" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="WindowState" Value="Maximized">
              <Setter TargetName="RestoreButton" Property="Visibility" Value="Visible" />
              <Setter TargetName="MaximizeButton" Property="Visibility" Value="Collapsed" />
              <Setter Property="Padding" Value="5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Window.ResizeMode"
               Value="CanResizeWithGrip">
        <Setter Property="Template"
                Value="{StaticResource WindowTemplateKey}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="{x:Type controls:FluentWindow}"
         BasedOn="{StaticResource {x:Type Window}}" />
  
</ResourceDictionary>