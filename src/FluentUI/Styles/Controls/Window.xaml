<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:controls="clr-namespace:FluentUI.Controls">

  <ControlTemplate x:Key="ChromeButtonTemplate" TargetType="{x:Type Button}">

    <Grid>

      <Border x:Name="background"
        Background="{TemplateBinding Background}"
        BorderThickness="0"
        SnapsToDevicePixels="True" />

      <Border x:Name="border"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="3"
        SnapsToDevicePixels="True" />

      <ContentPresenter x:Name="contentPresenter"
        Margin="{TemplateBinding Padding}"
        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
        Focusable="False"
        RecognizesAccessKey="True"
        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

    </Grid>
  </ControlTemplate>

  <Style x:Key="ChromeButtonStyle" TargetType="{x:Type Button}">

    <Setter Property="Background" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FontFamily" Value="{DynamicResource IconsFontFamily}" />
    <Setter Property="FontSize" Value="10" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="Height" Value="32" />
    <Setter Property="Width" Value="46" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template" Value="{DynamicResource ChromeButtonTemplate}" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="CaptionButtonStyle"
    BasedOn="{StaticResource ChromeButtonStyle}"
    TargetType="{x:Type Button}" />

  <Style x:Key="CloseButtonStyle"
    BasedOn="{StaticResource ChromeButtonStyle}"
    TargetType="{x:Type Button}">
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource ShellCaptionCloseFillColorPrimaryBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ShellCaptionCloseTextColorPrimaryBrush}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource ShellCaptionCloseFillColorSecondaryBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ShellCaptionCloseTextColorSecondaryBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="{x:Type Window}" TargetType="{x:Type Window}">
    <!--
    <Setter Property="FontSize" Value="{DynamicResource CaptionFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource CaptionFontWeight}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    -->
    <Setter Property="Background" Value="{DynamicResource MicaBackgroundFillColorBaseBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource SurfaceStrokeColorDefaultSnappedWindowsBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}" />
    <Setter Property="WindowChrome.WindowChrome">
      <Setter.Value>
        <WindowChrome
          CaptionHeight="32"
          NonClientFrameEdges="None"
          UseAeroCaptionButtons="False" />
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Window}">
          <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid Margin="{TemplateBinding Padding}">

              <Grid.RowDefinitions>
                <RowDefinition Height="32" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>

              <Grid
                Grid.Row="0"
                Margin="12,0,0,0"
                VerticalAlignment="Center">

                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="16" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Border x:Name="iconPlaceHolder"
                  Grid.Column="0"
                  Width="16"
                  Height="16"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  BorderBrush="{DynamicResource TextFillColorPrimaryBrush}"
                  BorderThickness="1"
                  CornerRadius="8" />

                <TextBlock
                  Grid.Column="2"
                  Margin="0,0,8,0"
                  Padding="0,0,0,2"
                  VerticalAlignment="Center"
                  FontFamily="{DynamicResource ControlFontFamily}"
                  FontSize="{DynamicResource CaptionFontSize}"
                  FontWeight="{DynamicResource CaptionFontWeight}"
                  Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                  Text="{TemplateBinding Title}" />

                <StackPanel
                  Grid.Column="4"
                  Orientation="Horizontal"
                  WindowChrome.IsHitTestVisibleInChrome="True">
                  <Button x:Name="MinimizeButton"
                    Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}"
                    Content="&#xE921;"
                    Style="{DynamicResource CaptionButtonStyle}" />
                  <Button x:Name="MaximizeButton"
                    Command="{Binding Source={x:Static SystemCommands.MaximizeWindowCommand}}"
                    Content="&#xE922;"
                    Style="{DynamicResource CaptionButtonStyle}" />
                  <Button x:Name="RestoreButton"
                    Command="{Binding Source={x:Static SystemCommands.RestoreWindowCommand}}"
                    Content="&#xE923;"
                    Style="{DynamicResource CaptionButtonStyle}" />
                  <Button x:Name="CloseButton"
                    Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}"
                    Content="&#xE8BB;"
                    Style="{DynamicResource CloseButtonStyle}" />
                </StackPanel>
              </Grid>

              <AdornerDecorator Grid.Row="1">
                <ContentPresenter />
              </AdornerDecorator>

            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="WindowState" Value="Normal">
              <Setter TargetName="MaximizeButton" Property="Visibility" Value="Visible" />
              <Setter TargetName="RestoreButton" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="WindowState" Value="Maximized">
              <Setter Property="Padding" Value="5" />
              <Setter TargetName="MaximizeButton" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="RestoreButton" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="ResizeMode" Value="NoResize">
              <Setter TargetName="MaximizeButton" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="MinimizeButton" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="RestoreButton" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="WindowStyle" Value="ToolWindow">
              <Setter TargetName="MaximizeButton" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="MinimizeButton" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="RestoreButton" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style BasedOn="{StaticResource {x:Type Window}}" TargetType="{x:Type controls:FluentWindow}" />

</ResourceDictionary>