<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/FluentUI;component/Styles/Controls/Button.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Style x:Key="ExpanderHeaderFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle
              Margin="0"
              SnapsToDevicePixels="True"
              Stroke="Black"
              StrokeDashArray="1 2"
              StrokeThickness="1" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <LinearGradientBrush x:Key="ExpanderShadowFill" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Offset="0.5" Color="Transparent" />
      <GradientStop Offset="1" Color="#30111111" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>

  <Style x:Key="ExpanderHeaderBaseStyle"
    BasedOn="{StaticResource SubtleIconOnlyButtonStyle}"
    TargetType="{x:Type ToggleButton}">
    <Setter Property="Height" Value="40" />
    <Setter Property="Width" Value="40" />
  </Style>

  <Style x:Key="ExpanderDownHeaderStyle"
    BasedOn="{StaticResource ExpanderHeaderBaseStyle}"
    TargetType="{x:Type ToggleButton}">
    <Setter Property="Content" Value="&#xE972;" />
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Content" Value="&#xE971;" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="ExpanderUpHeaderStyle"
    BasedOn="{StaticResource ExpanderHeaderBaseStyle}"
    TargetType="{x:Type ToggleButton}">
    <Setter Property="Content" Value="&#xE971;" />
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Content" Value="&#xE972;" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="ExpanderLeftHeaderStyle"
    BasedOn="{StaticResource ExpanderHeaderBaseStyle}"
    TargetType="{x:Type ToggleButton}">
    <Setter Property="Content" Value="&#xE973;" />
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Content" Value="&#xE974;" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="ExpanderRightHeaderStyle"
    BasedOn="{StaticResource ExpanderHeaderBaseStyle}"
    TargetType="{x:Type ToggleButton}">
    <Setter Property="Content" Value="&#xE974;" />
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Content" Value="&#xE973;" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <ControlTemplate x:Key="ExpanderHorizontal" TargetType="{x:Type Expander}">
    <Border
      Background="{TemplateBinding Background}"
      BorderBrush="{TemplateBinding BorderBrush}"
      BorderThickness="{TemplateBinding BorderThickness}"
      CornerRadius="4"
      SnapsToDevicePixels="True">
      <DockPanel>
        <Grid x:Name="HeaderSite"
          MinHeight="62"
          DockPanel.Dock="Top"
          Focusable="False">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <ContentPresenter
            Margin="{TemplateBinding Padding}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            Content="{TemplateBinding Header}"
            ContentTemplate="{TemplateBinding HeaderTemplate}"
            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
            FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" />
          <ToggleButton x:Name="ExpanderButton"
            Grid.Column="1"
            Margin="0,0,3,0"
            IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
            Style="{StaticResource ExpanderDownHeaderStyle}" />
        </Grid>
        <Border x:Name="ExpandSite"
          Background="{DynamicResource CardBackgroundFillColorSecondaryBrush}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="0,1,0,0"
          DockPanel.Dock="Bottom"
          Visibility="Collapsed">
          <ContentPresenter
            Margin="47,7"
            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
            Focusable="False" />
        </Border>
      </DockPanel>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsExpanded" Value="True">
        <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="ExpandDirection" Value="Up">
        <Setter TargetName="ExpandSite" Property="BorderThickness" Value="0,0,0,1" />
        <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
        <Setter TargetName="ExpanderButton" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
        <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
      </Trigger>
      <Trigger Property="HasContent" Value="False">
        <Setter Property="IsExpanded" Value="False" />
        <Setter TargetName="ExpanderButton" Property="Visibility" Value="Hidden" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="ExpanderVertical" TargetType="{x:Type Expander}">
    <Border
      Background="{TemplateBinding Background}"
      BorderBrush="{TemplateBinding BorderBrush}"
      BorderThickness="{TemplateBinding BorderThickness}"
      CornerRadius="4"
      SnapsToDevicePixels="True">
      <DockPanel>
        <Grid x:Name="HeaderSite"
          MinWidth="62"
          DockPanel.Dock="Left"
          Focusable="False">
          <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <ContentPresenter
            Margin="{TemplateBinding Padding}"
            HorizontalAlignment="Center"
            VerticalAlignment="Bottom"
            Content="{TemplateBinding Header}"
            ContentTemplate="{TemplateBinding HeaderTemplate}"
            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
            FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}">
            <ContentPresenter.LayoutTransform>
              <TransformGroup>
                <RotateTransform Angle="-90" />
              </TransformGroup>
            </ContentPresenter.LayoutTransform>
          </ContentPresenter>
          <ToggleButton x:Name="ExpanderButton"
            Grid.Row="1"
            Margin="0,0,0,3"
            IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
            Style="{StaticResource ExpanderRightHeaderStyle}" />
        </Grid>
        <Border x:Name="ExpandSite"
          Background="{DynamicResource CardBackgroundFillColorSecondaryBrush}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1,0,0,0"
          DockPanel.Dock="Right"
          Visibility="Collapsed">
          <ContentPresenter
            Margin="12,8"
            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
            Focusable="False" />
        </Border>
      </DockPanel>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsExpanded" Value="True">
        <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="ExpandDirection" Value="Left">
        <Setter TargetName="ExpandSite" Property="BorderThickness" Value="0,0,1,0" />
        <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
        <Setter TargetName="ExpanderButton" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
        <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
      </Trigger>
      <Trigger Property="HasContent" Value="False">
        <Setter Property="IsExpanded" Value="False" />
        <Setter TargetName="ExpanderButton" Property="Visibility" Value="Hidden" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="{x:Type Expander}" TargetType="{x:Type Expander}">
    <Setter Property="Background" Value="{DynamicResource CardBackgroundFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource CardStrokeColorDefaultBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="Padding" Value="47,13,0,13" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Template" Value="{StaticResource ExpanderHorizontal}" />
    <Style.Triggers>
      <Trigger Property="ExpandDirection" Value="Right">
        <Setter Property="Padding" Value="10,20,13,5" />
        <Setter Property="Template" Value="{StaticResource ExpanderVertical}" />
      </Trigger>
      <Trigger Property="ExpandDirection" Value="Left">
        <Setter Property="Padding" Value="10,20,13,5" />
        <Setter Property="Template" Value="{StaticResource ExpanderVertical}" />
      </Trigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>