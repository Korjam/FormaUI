<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/FluentUI;component/Styles/Controls/Button.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Style x:Key="ExpanderHeaderFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="0"
                       StrokeThickness="1"
                       Stroke="Black"
                       StrokeDashArray="1 2"
                       SnapsToDevicePixels="True" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <LinearGradientBrush x:Key="ExpanderShadowFill"
                       StartPoint="0,0"
                       EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="Transparent"
                    Offset="0.5" />
      <GradientStop Color="#30111111"
                    Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>

  <Style x:Key="ExpanderHeaderBaseStyle"
         TargetType="{x:Type ToggleButton}"
         BasedOn="{StaticResource SubtleIconOnlyButtonStyle}">
    <Setter Property="Width" Value="40" />
    <Setter Property="Height" Value="40" />
  </Style>

  <Style x:Key="ExpanderDownHeaderStyle"
         TargetType="{x:Type ToggleButton}"
         BasedOn="{StaticResource ExpanderHeaderBaseStyle}">
    <Setter Property="Content" Value="&#xE972;" />
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Content" Value="&#xE971;" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="ExpanderUpHeaderStyle"
         TargetType="{x:Type ToggleButton}"
         BasedOn="{StaticResource ExpanderHeaderBaseStyle}">
    <Setter Property="Content" Value="&#xE971;" />
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Content" Value="&#xE972;" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="ExpanderLeftHeaderStyle"
         TargetType="{x:Type ToggleButton}"
         BasedOn="{StaticResource ExpanderHeaderBaseStyle}">
    <Setter Property="Content" Value="&#xE973;" />
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Content" Value="&#xE974;" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="ExpanderRightHeaderStyle"
         TargetType="{x:Type ToggleButton}"
         BasedOn="{StaticResource ExpanderHeaderBaseStyle}">
    <Setter Property="Content" Value="&#xE974;" />
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Content" Value="&#xE973;" />
      </Trigger>
    </Style.Triggers>
  </Style>
  
  <Style x:Key="{x:Type Expander}"
         TargetType="{x:Type Expander}">
    <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="Background" Value="{DynamicResource CardBackgroundFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource CardStrokeColorDefaultBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Padding" Value="47,13,0,13" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Border BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}"
                  CornerRadius="4"
                  SnapsToDevicePixels="True">
            <DockPanel>
              <Grid x:Name="HeaderSite"
                    Focusable="False"
                    DockPanel.Dock="Top"
                    MinHeight="62">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                  Content="{TemplateBinding Header}"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Left"
                                  Margin="{TemplateBinding Padding}" />
                <ToggleButton x:Name="ExpanderButton"
                              Grid.Column="1"
                              Margin="0,0,3,0"
                              Style="{StaticResource ExpanderDownHeaderStyle}"
                              IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
              </Grid>
              <Border x:Name="ExpandSite"
                      DockPanel.Dock="Bottom"
                      Visibility="Collapsed"
                      BorderThickness="0,1,0,0"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      Background="{DynamicResource CardBackgroundFillColorSecondaryBrush}">
                <ContentPresenter Focusable="False"
                                  Margin="47,7"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              </Border>
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
              <Setter Property="Visibility" Value="Visible" TargetName="ExpandSite" />
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Right">
              <Setter Property="DockPanel.Dock" Value="Right" TargetName="ExpandSite" />
              <Setter Property="DockPanel.Dock" Value="Left" TargetName="HeaderSite" />
              <Setter Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" TargetName="ExpanderButton" />
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Up">
              <Setter Property="DockPanel.Dock" Value="Top" TargetName="ExpandSite" />
              <Setter Property="DockPanel.Dock" Value="Bottom" TargetName="HeaderSite" />
              <Setter Property="BorderThickness" Value="0,0,0,1" TargetName="ExpandSite" />
              <Setter Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" TargetName="ExpanderButton" />
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Left">
              <Setter Property="DockPanel.Dock" Value="Left" TargetName="ExpandSite" />
              <Setter Property="DockPanel.Dock" Value="Right" TargetName="HeaderSite" />
              <Setter Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" TargetName="ExpanderButton" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>