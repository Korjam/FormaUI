<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
  
  <Style x:Key="ComboBoxEditableTextBox"
         TargetType="{x:Type TextBox}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="AllowDrop" Value="True" />
    <Setter Property="MinWidth" Value="0" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer x:Name="PART_ContentHost"
                        Focusable="False"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden"
                        Background="Transparent" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="ClickMode" Value="Press" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="templateRoot" 
                  SnapsToDevicePixels="True"
                  CornerRadius="3"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  Background="{TemplateBinding Background}"
                  Padding="{TemplateBinding Padding}">
            <Border x:Name="splitBorder" 
                    SnapsToDevicePixels="True"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    CornerRadius="3">
              <TextBlock x:Name="arrow"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         Margin="2"
                         Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                         FontFamily="{DynamicResource IconsFontFamily}"
                         FontSize="12" 
                         Text="&#xE972;" />
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
              <Setter Property="Background" Value="{DynamicResource ControlFillColorTertiaryBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
              <Setter TargetName="arrow" Property="Foreground" Value="{DynamicResource TextFillColorTertiaryBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
              <Setter Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
              <Setter TargetName="arrow" Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
            </Trigger>
            <DataTrigger Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True">
              <Setter TargetName="arrow" Property="Margin" Value="9,5" />
              <Setter TargetName="splitBorder" Property="BorderThickness" Value="1" />
              <Setter TargetName="splitBorder" Property="BorderBrush" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
              <Setter TargetName="splitBorder" Property="Background" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True" />
                <Condition Binding="{Binding IsMouseOver, ElementName=splitBorder}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="splitBorder" Property="BorderBrush" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
              <Setter TargetName="splitBorder" Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
            </MultiDataTrigger>
            <!-- This style only should apply when the button is pressed but not the arrow  -->
            <!--
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True" />
                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
              <Setter Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorTertiaryBrush}" />
              <Setter TargetName="arrow" Property="Foreground" Value="{DynamicResource TextFillColorTertiaryBrush}" />

            </MultiDataTrigger>
            -->
            <!-- This style only should apply when the arrow is pressed  -->
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True" />
                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="BorderBrush" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
              <Setter Property="Background" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
              <Setter TargetName="arrow" Property="Foreground" Value="{DynamicResource TextFillColorTertiaryBrush}" />

              <!-- This style only should apply when the arrow is pressed  -->
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True" />
                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
              </MultiDataTrigger.Conditions>
              <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
              <Setter Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
              <Setter TargetName="arrow" Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />

              <!-- This style only should apply when the arrow is pressed  -->
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="8" />
        <ColumnDefinition MinWidth="30" Width="0" />
      </Grid.ColumnDefinitions>
      <Popup x:Name="PART_Popup"
             AllowsTransparency="True"
             Placement="Bottom"
             Grid.ColumnSpan="2"
             IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
             PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
        <theme:SystemDropShadowChrome x:Name="shadow"
                                      Color="Transparent"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
          <Border x:Name="dropDownBorder"
                  BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                  Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                  BorderThickness="1">
            <ScrollViewer x:Name="DropDownScrollViewer">
              <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                <Canvas x:Name="canvas"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Height="0"
                        Width="0">
                  <Rectangle x:Name="opaqueRect"
                             Fill="{Binding Background, ElementName=dropDownBorder}"
                             Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                             Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                </Canvas>
                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
            </ScrollViewer>
          </Border>
        </theme:SystemDropShadowChrome>
      </Popup>
      <ToggleButton x:Name="toggleButton"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxToggleButton}"
                    Grid.ColumnSpan="3" />
      <Border x:Name="border"
              Margin="{TemplateBinding BorderThickness}">
        <TextBox x:Name="PART_EditableTextBox"
                 Style="{StaticResource ComboBoxEditableTextBox}"
                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                 Margin="{TemplateBinding Padding}"
                 Foreground="{TemplateBinding Foreground}"
                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
      </Border>

      <Border x:Name="borderAccent"
              IsHitTestVisible="False"
              SnapsToDevicePixels="True"
              CornerRadius="3"
              Grid.ColumnSpan="3" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
        <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
      </Trigger>
      <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
        <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5" />
        <Setter Property="Color" TargetName="shadow" Value="#71000000" />
      </Trigger>
      <Trigger Property="HasItems" Value="False">
        <Setter Property="Height" TargetName="dropDownBorder" Value="95" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping" Value="True" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
      </MultiTrigger>
      <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
        <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
        <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
      </Trigger>
      <Trigger Property="IsKeyboardFocused" SourceName="PART_EditableTextBox" Value="True">
        <Setter TargetName="borderAccent" Property="BorderThickness" Value="0,0,0,2" />
        <Setter TargetName="borderAccent" Property="BorderBrush" Value="{DynamicResource AccentFillColorDefaultBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlFillColorInputActiveBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
        <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
    <Grid x:Name="templateRoot"
          SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="8" />
        <ColumnDefinition MinWidth="16" Width="0" />
      </Grid.ColumnDefinitions>
      <Popup x:Name="PART_Popup"
             AllowsTransparency="True"
             Margin="1"
             Placement="Bottom"
             Grid.ColumnSpan="2"
             IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
             PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
        <theme:SystemDropShadowChrome x:Name="shadow"
                                      Color="Transparent"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
          <Border x:Name="dropDownBorder"
                  BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                  Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                  BorderThickness="1">
            <ScrollViewer x:Name="DropDownScrollViewer">
              <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                <Canvas x:Name="canvas"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Height="0"
                        Width="0">
                  <Rectangle x:Name="opaqueRect"
                             Fill="{Binding Background, ElementName=dropDownBorder}"
                             Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                             Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                </Canvas>
                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
            </ScrollViewer>
          </Border>
        </theme:SystemDropShadowChrome>
      </Popup>
      <ToggleButton x:Name="toggleButton"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxToggleButton}"
                    Grid.ColumnSpan="3" />
      <ContentPresenter x:Name="contentPresenter"
                        Content="{TemplateBinding SelectionBoxItem}"
                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                        IsHitTestVisible="False"
                        Margin="{TemplateBinding Padding}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
      </Trigger>
      <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
        <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5" />
        <Setter Property="Color" TargetName="shadow" Value="#71000000" />
      </Trigger>
      <Trigger Property="HasItems" Value="False">
        <Setter Property="Height" TargetName="dropDownBorder" Value="95" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping" Value="True" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
      </MultiTrigger>
      <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
        <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
        <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style TargetType="{x:Type ComboBox}">
    <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="MinWidth" Value="126" />
    <Setter Property="MinHeight" Value="30" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Padding" Value="11,4" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
    <Style.Triggers>
      <Trigger Property="IsEditable" Value="True">
        <Setter Property="IsTabStop" Value="False" />
        <!--<Setter Property="Padding" Value="11,4,4,4" />-->
        <!-- TextBox is setting an aditional padding for some reason -->
        <Setter Property="Padding" Value="8,4,4,4" />
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>


  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#1F26A0DA" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#A826A0DA" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#3D26A0DA" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#FF26A0DA" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#2E0080FF" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#99006CD9" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#3DDADADA" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#FFDADADA" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#FF26A0DA" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#5426A0DA" />
  <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#FF26A0DA" />


  <Style TargetType="{x:Type ComboBoxItem}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Padding" Value="4,1" />
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Border x:Name="Bd" 
                  BorderBrush="{TemplateBinding BorderBrush}" 
                  BorderThickness="{TemplateBinding BorderThickness}" 
                  Background="{TemplateBinding Background}" 
                  Padding="{TemplateBinding Padding}" 
                  SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="False" />
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="UIElement.IsKeyboardFocused" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}" />
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="IsMouseOver" Value="False" />
                <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}" />
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}" />
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="IsMouseOver" Value="False" />
                <Condition Property="UIElement.IsKeyboardFocused" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}" />
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="False" />
                <Condition Property="IsMouseOver" Value="False" />
                <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="False" />
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}" />
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>