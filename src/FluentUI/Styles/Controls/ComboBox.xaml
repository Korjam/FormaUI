<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="AllowDrop" Value="True" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="MinHeight" Value="0" />
    <Setter Property="MinWidth" Value="0" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer x:Name="PART_ContentHost"
            Background="Transparent"
            Focusable="False"
            HorizontalScrollBarVisibility="Hidden"
            VerticalScrollBarVisibility="Hidden" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ClickMode" Value="Press" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="templateRoot"
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="3"
            SnapsToDevicePixels="True">
            <Border x:Name="splitBorder"
              HorizontalAlignment="Right"
              VerticalAlignment="Center"
              CornerRadius="3"
              SnapsToDevicePixels="True">
              <TextBlock x:Name="arrow"
                Margin="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontFamily="{DynamicResource IconsFontFamily}"
                FontSize="12"
                Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                Text="&#xE972;" />
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource ControlFillColorTertiaryBrush}" />
              <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
              <Setter TargetName="arrow" Property="Foreground" Value="{DynamicResource TextFillColorTertiaryBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
              <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
              <Setter TargetName="arrow" Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
            </Trigger>
            <DataTrigger Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True">
              <Setter TargetName="arrow" Property="Margin" Value="9,5" />
              <Setter TargetName="splitBorder" Property="Background" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
              <Setter TargetName="splitBorder" Property="BorderBrush" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
              <Setter TargetName="splitBorder" Property="BorderThickness" Value="1" />
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True" />
                <Condition Binding="{Binding IsMouseOver, ElementName=splitBorder}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="splitBorder" Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
              <Setter TargetName="splitBorder" Property="BorderBrush" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
            </MultiDataTrigger>
            <!-- This style only should apply when the button is pressed but not the arrow -->
            <!--
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True" />
                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
              <Setter Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorTertiaryBrush}" />
              <Setter TargetName="arrow" Property="Foreground" Value="{DynamicResource TextFillColorTertiaryBrush}" />

            </MultiDataTrigger>
            -->
            <!-- This style only should apply when the arrow is pressed -->
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True" />
                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
              <Setter Property="BorderBrush" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
              <Setter TargetName="arrow" Property="Foreground" Value="{DynamicResource TextFillColorTertiaryBrush}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True" />
                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
              <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
              <Setter TargetName="arrow" Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="8" />
        <ColumnDefinition Width="0" MinWidth="30" />
      </Grid.ColumnDefinitions>
      <Popup x:Name="PART_Popup"
        Grid.ColumnSpan="2"
        Margin="1"
        AllowsTransparency="True"
        IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
        Placement="Bottom">
        <Border x:Name="dropDownBorder"
          MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
          MaxHeight="{TemplateBinding MaxDropDownHeight}"
          Margin="20"
          Padding="1,0"
          Background="{DynamicResource AcrylicBackgroundFillColorDefaultBrush}"
          BorderBrush="{DynamicResource SurfaceStrokeColorFlyoutBrush}"
          BorderThickness="1,0,1,1"
          CornerRadius="0,0,7,7"
          Effect="{DynamicResource FlyoutShadow}">
          <ScrollViewer x:Name="DropDownScrollViewer">
            <ItemsPresenter x:Name="ItemsPresenter"
              KeyboardNavigation.DirectionalNavigation="Contained"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </ScrollViewer>
        </Border>
      </Popup>
      <ToggleButton x:Name="toggleButton"
        Grid.ColumnSpan="3"
        Padding="{TemplateBinding Padding}"
        Background="{TemplateBinding Background}"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
        Style="{StaticResource ComboBoxToggleButton}" />
      <Border x:Name="border" Margin="{TemplateBinding BorderThickness}">
        <TextBox x:Name="PART_EditableTextBox"
          Margin="{TemplateBinding Padding}"
          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
          Foreground="{TemplateBinding Foreground}"
          IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
          Style="{StaticResource ComboBoxEditableTextBox}" />
      </Border>

      <Border x:Name="borderAccent"
        Grid.ColumnSpan="3"
        CornerRadius="3"
        IsHitTestVisible="False"
        SnapsToDevicePixels="True" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
        <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
      </Trigger>
      <Trigger Property="HasItems" Value="False">
        <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping" Value="True" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
      </MultiTrigger>
      <Trigger SourceName="PART_EditableTextBox" Property="IsKeyboardFocused" Value="True">
        <Setter Property="Background" Value="{DynamicResource ControlFillColorInputActiveBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
        <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
        <Setter TargetName="borderAccent" Property="BorderBrush" Value="{DynamicResource AccentFillColorDefaultBrush}" />
        <Setter TargetName="borderAccent" Property="BorderThickness" Value="0,0,0,2" />
      </Trigger>
      <Trigger Property="IsDropDownOpen" Value="True">
        <Setter TargetName="borderAccent" Property="CornerRadius" Value="3,3,0,0" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="8" />
        <ColumnDefinition Width="0" MinWidth="16" />
      </Grid.ColumnDefinitions>
      <Popup x:Name="PART_Popup"
        Grid.ColumnSpan="2"
        Margin="1"
        AllowsTransparency="True"
        IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
        Placement="Bottom">
        <Border x:Name="dropDownBorder"
          MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
          MaxHeight="{TemplateBinding MaxDropDownHeight}"
          Margin="20"
          Padding="1,0"
          Background="{DynamicResource AcrylicBackgroundFillColorDefaultBrush}"
          BorderBrush="{DynamicResource SurfaceStrokeColorFlyoutBrush}"
          BorderThickness="1"
          CornerRadius="7"
          Effect="{DynamicResource FlyoutShadow}">
          <ScrollViewer x:Name="DropDownScrollViewer">
            <ItemsPresenter x:Name="ItemsPresenter"
              KeyboardNavigation.DirectionalNavigation="Contained"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </ScrollViewer>
        </Border>
      </Popup>
      <ToggleButton x:Name="toggleButton"
        Grid.ColumnSpan="3"
        Padding="{TemplateBinding Padding}"
        Background="{TemplateBinding Background}"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
        Style="{StaticResource ComboBoxToggleButton}" />
      <ContentPresenter x:Name="contentPresenter"
        Margin="{TemplateBinding Padding}"
        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
        Content="{TemplateBinding SelectionBoxItem}"
        ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
        IsHitTestVisible="False"
        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
      </Trigger>
      <Trigger Property="HasItems" Value="False">
        <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping" Value="True" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style TargetType="{x:Type ComboBox}">
    <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}" />
    <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="Padding" Value="12,5" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
    <Style.Triggers>
      <Trigger Property="IsEditable" Value="True">
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
        <Setter Property="IsTabStop" Value="False" />
        <!--<Setter Property="Padding" Value="11,4,4,4" />-->
        <!-- TextBox is setting an aditional padding for some reason -->
        <Setter Property="Padding" Value="8,2,4,2" />
        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="{x:Type ComboBoxItem}">
    <Setter Property="Background" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="Margin" Value="4,2" />
    <Setter Property="Padding" Value="11,6,11,8" />
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Grid>
            <Border x:Name="Bd"
              Padding="{TemplateBinding Padding}"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="4"
              SnapsToDevicePixels="True">
              <ContentPresenter
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
            <Border x:Name="selector"
              Width="3"
              Height="16"
              Margin="{TemplateBinding Margin}"
              HorizontalAlignment="Left"
              VerticalAlignment="Center"
              Background="{DynamicResource AccentFillColorDefaultBrush}"
              CornerRadius="2"
              Visibility="Collapsed" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
              <Setter Property="BorderBrush" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
              <Setter Property="BorderBrush" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
              <Setter TargetName="selector" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
              <Setter TargetName="selector" Property="Background" Value="{DynamicResource AccentFillColorDisabledBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>