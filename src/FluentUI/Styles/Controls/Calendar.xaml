<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF" />
  
  <Style TargetType="{x:Type Calendar}">
    <Setter Property="Foreground" Value="#FF333333" />
    <Setter Property="CalendarItemStyle" Value="{DynamicResource {x:Type CalendarItem}}" />
    <Setter Property="CalendarDayButtonStyle" Value="{DynamicResource {x:Type CalendarDayButton}}" />
    <Setter Property="CalendarButtonStyle" Value="{DynamicResource {x:Type CalendarButton}}" />
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
          <GradientStop Color="#FFE4EAF0" Offset="0" />
          <GradientStop Color="#FFECF0F4" Offset="0.16" />
          <GradientStop Color="#FFFCFCFD" Offset="0.16" />
          <GradientStop Color="#FFFFFFFF" Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderBrush">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="#FFA3AEB9" Offset="0" />
          <GradientStop Color="#FF8399A9" Offset="0.375" />
          <GradientStop Color="#FF718597" Offset="0.375" />
          <GradientStop Color="#FF617584" Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Calendar}">
          <StackPanel Name="PART_Root"
                      HorizontalAlignment="Center">
            <CalendarItem Name="PART_CalendarItem" 
                          Style="{TemplateBinding CalendarItemStyle}"
                          Background="{TemplateBinding Background}" 
                          BorderBrush="{TemplateBinding BorderBrush}" 
                          BorderThickness="{TemplateBinding BorderThickness}" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <ControlTemplate x:Key="PreviousButtonTemplate"
                   TargetType="{x:Type Button}">
    <Grid Cursor="Hand">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="CommonStates">
          <VisualState Name="Normal" />
          <VisualState Name="MouseOver">
            <Storyboard>
              <ColorAnimation Storyboard.TargetName="path"
                              Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                              To="#FF73A9D8"
                              Duration="0" />
            </Storyboard>
          </VisualState>
          <VisualState Name="Disabled">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="path"
                               Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)"
                               To=".5"
                               Duration="0" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Rectangle Fill="#11E5EBF1"
                 Stretch="Fill"
                 Opacity="1" />
      <Grid>
        <Path x:Name="path"
              Margin="14,-6,0,0"
              Height="10"
              Width="6"
              VerticalAlignment="Center"
              HorizontalAlignment="Left"
              Stretch="Fill"
              Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"
              Fill="#FF333333" />
      </Grid>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="NextButtonTemplate"
                   TargetType="{x:Type Button}">
    <Grid Cursor="Hand">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="CommonStates">
          <VisualState Name="Normal" />
          <VisualState Name="MouseOver">
            <Storyboard>
              <ColorAnimation Storyboard.TargetName="path"
                              Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                              To="#FF73A9D8"
                              Duration="0" />
            </Storyboard>
          </VisualState>
          <VisualState Name="Disabled">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="path"
                               Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)"
                               To=".5"
                               Duration="0" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Rectangle Fill="#11E5EBF1"
                 Stretch="Fill"
                 Opacity="1" />
      <Grid>
        <Path x:Name="path"
              Margin="0,-6,14,0"
              Height="10"
              Width="6"
              VerticalAlignment="Center"
              HorizontalAlignment="Right"
              Stretch="Fill"
              Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
              Fill="#FF333333" />
      </Grid>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="HeaderButtonTemplate"
                   TargetType="{x:Type Button}">
    <Grid Cursor="Hand">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="CommonStates">
          <VisualState Name="Normal" />
          <VisualState Name="MouseOver">
            <Storyboard>
              <ColorAnimation Storyboard.TargetName="buttonContent"
                              Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                              To="#FF73A9D8"
                              Duration="0" />
            </Storyboard>
          </VisualState>
          <VisualState Name="Disabled">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="buttonContent"
                               Storyboard.TargetProperty="Opacity"
                               To=".5"
                               Duration="0" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <ContentPresenter x:Name="buttonContent"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        Margin="1,4,1,9"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        TextElement.Foreground="#FF333333" />
    </Grid>
  </ControlTemplate>

  <Style TargetType="{x:Type CalendarItem}">
    <Setter Property="Margin" Value="0,3,0,3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarItem}">
          <ControlTemplate.Resources>
            <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
              <TextBlock FontWeight="Bold" 
                         FontFamily="Verdana" 
                         FontSize="9.5" 
                         Foreground="#FF333333" 
                         HorizontalAlignment="Center"
                         Text="{Binding}"
                         Margin="0,6,0,6"
                         VerticalAlignment="Center" />
            </DataTemplate>
          </ControlTemplate.Resources>
          <Grid Name="PART_Root" >
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup Name="CommonStates">
                <VisualState Name="Normal" />
                <VisualState Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PART_DisabledVisual"
                                     Storyboard.TargetProperty="Opacity"
                                     To="1"
                                     Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" 
                    CornerRadius="1">
              <Border CornerRadius="1"
                      BorderBrush="#FFFFFFFF"
                      BorderThickness="2">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>

                  <Button x:Name="PART_PreviousButton" 
                          Grid.Row="0"
                          Grid.Column="0"
                          Template="{StaticResource PreviousButtonTemplate}" 
                          Height="20"
                          Width="28" 
                          HorizontalAlignment="Left" 
                          Focusable="False" />

                  <Button x:Name="PART_HeaderButton"                                             
                          Grid.Row="0"
                          Grid.Column="1" 
                          Template="{StaticResource HeaderButtonTemplate}" 
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center" 
                          FontWeight="Bold"
                          FontSize="10.5" 
                          Focusable="False" />

                  <Button x:Name="PART_NextButton" 
                          Grid.Row="0"
                          Grid.Column="2" 
                          Height="20"
                          Width="28" 
                          HorizontalAlignment="Right" 
                          Template="{StaticResource NextButtonTemplate}" 
                          Focusable="False" />

                  <Grid x:Name="PART_MonthView"
                        Grid.Row="1"
                        Grid.ColumnSpan="3"
                        Visibility="Visible"
                        Margin="6,20,6,6"
                        HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                  </Grid>

                  <Grid x:Name="PART_YearView"
                        Grid.Row="1"
                        Grid.ColumnSpan="3"
                        Visibility="Hidden"
                        Margin="6,20,7,6"
                        HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                  </Grid>
                </Grid>
              </Border>
            </Border>
            <Rectangle x:Name="PART_DisabledVisual"
                       Opacity="0"
                       Visibility="Collapsed"
                       Stretch="Fill"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"
                       Stroke="{StaticResource DisabledColor}"
                       Fill="{StaticResource DisabledColor}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="PART_DisabledVisual" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger Value="Year" Binding="{Binding DisplayMode, RelativeSource={RelativeSource AncestorType={x:Type Calendar}}}">
              <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
              <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Value="Decade" Binding="{Binding DisplayMode, RelativeSource={RelativeSource AncestorType={x:Type Calendar}}}">
              <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
              <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type CalendarDayButton}">
    <Setter Property="MinWidth" Value="40" />
    <Setter Property="MinHeight" Value="40" />
    <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />

    <Setter Property="Background" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
    <Setter Property="BorderThickness" Value="0" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarDayButton}">
          <Grid>
            <Ellipse x:Name="BackGroundVisual"
                     Stroke="{TemplateBinding BorderBrush}"
                     Fill="{TemplateBinding Background}" />
            <Ellipse x:Name="TodaySelectedVisual"
                     Stroke="{DynamicResource TextOnAccentFillColorPrimaryBrush}"
                     Visibility="Collapsed"
                     StrokeThickness="1"
                     Margin="2" />
            <ContentPresenter x:Name="NormalText"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              TextElement.Foreground="{TemplateBinding Foreground}" />
            <Line x:Name="Blackout"
                  Visibility="Collapsed"
                  X1="0" Y1="0"
                  X2="18" Y2="18"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center"
                  Stroke="{DynamicResource ControlStrongStrokeColorDefaultBrush}"/>

            <Grid x:Name="DayButtonFocusVisual"
                  Visibility="Collapsed">
              <Ellipse Stroke="{DynamicResource FocusStrokeColorInnerBrush}"
                       StrokeThickness="1"
                       Margin="-0.5" />
              <Ellipse Stroke="{DynamicResource FocusStrokeColorOuterBrush}"
                       StrokeThickness="2"
                       Margin="-2.5" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
            </Trigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsInactive" Value="False" />
                <Condition Property="IsSelected" Value="False" />
                <Condition Property="IsEnabled" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource SubtleFillColorDisabledBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
            </MultiTrigger>

            <Trigger Property="IsInactive" Value="True">
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
            </Trigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsToday" Value="False" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="Foreground" Value="{DynamicResource AccentTextFillColorPrimaryBrush}" />
              <Setter Property="BorderBrush" Value="{DynamicResource AccentFillColorDefaultBrush}" />
              <Setter TargetName="BackGroundVisual" Property="StrokeThickness" Value="1" />
              <Setter TargetName="BackGroundVisual" Property="Margin" Value="0.5" />
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsToday" Value="False" />
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="BorderBrush" Value="{DynamicResource AccentFillColorSecondaryBrush}" />
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsToday" Value="False" />
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="IsPressed" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="BorderBrush" Value="{DynamicResource AccentFillColorTertiaryBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource AccentTextFillColorTertiaryBrush}" />
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsToday" Value="False" />
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="IsEnabled" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="BorderBrush" Value="{DynamicResource AccentFillColorDisabledBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
            </MultiTrigger>

            <Trigger Property="IsToday" Value="True">
              <Setter Property="Background" Value="{DynamicResource AccentFillColorDefaultBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextOnAccentFillColorPrimaryBrush}" />
              <Setter TargetName="Blackout" Property="Stroke" Value="{DynamicResource TextOnAccentFillColorPrimaryBrush}" />
            </Trigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsToday" Value="True" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="TodaySelectedVisual" Property="Visibility" Value="Visible" />
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsToday" Value="True" />
                <Condition Property="IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource AccentFillColorSecondaryBrush}" />
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsToday" Value="True" />
                <Condition Property="IsPressed" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource AccentFillColorTertiaryBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextOnAccentFillColorSecondaryBrush}" />
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsToday" Value="True" />
                <Condition Property="IsEnabled" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource AccentFillColorDisabledBrush}" />
            </MultiTrigger>

            <Trigger Property="IsBlackedOut" Value="True">
              <Setter TargetName="Blackout" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="IsFocused" Value="True">
              <Setter TargetName="DayButtonFocusVisual" Property="Visibility" Value="Visible" />
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type CalendarButton}">
    <Setter Property="MinWidth" Value="54" />
    <Setter Property="MinHeight" Value="54" />
    <Setter Property="Margin" Value="9,9,8.5,8.5" />
    <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />

    <Setter Property="Background" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
    <Setter Property="BorderThickness" Value="0" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarButton}">
          <Grid>
            <Ellipse x:Name="BackGroundVisual"
                     Stroke="{TemplateBinding BorderBrush}"
                     Fill="{TemplateBinding Background}" />

            <ContentPresenter x:Name="NormalText"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              TextElement.Foreground="{TemplateBinding Foreground}" />

            <Grid x:Name="ButtonFocusVisual"
                  Visibility="Collapsed">
              <Ellipse Stroke="{DynamicResource FocusStrokeColorInnerBrush}"
                       StrokeThickness="1"
                       Margin="-0.5" />
              <Ellipse Stroke="{DynamicResource FocusStrokeColorOuterBrush}"
                       StrokeThickness="2"
                       Margin="-2.5" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
            </Trigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsInactive" Value="False" />
                <Condition Property="HasSelectedDays" Value="False" />
                <Condition Property="IsEnabled" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource SubtleFillColorDisabledBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
            </MultiTrigger>

            <Trigger Property="IsInactive" Value="True">
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
            </Trigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasSelectedDays" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="Foreground" Value="{DynamicResource AccentTextFillColorPrimaryBrush}" />
              <Setter Property="BorderBrush" Value="{DynamicResource AccentFillColorDefaultBrush}" />
              <Setter TargetName="BackGroundVisual" Property="StrokeThickness" Value="1" />
              <Setter TargetName="BackGroundVisual" Property="Margin" Value="0.5" />
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasSelectedDays" Value="True" />
                <Condition Property="IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="BorderBrush" Value="{DynamicResource AccentFillColorSecondaryBrush}" />
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasSelectedDays" Value="True" />
                <Condition Property="IsPressed" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="BorderBrush" Value="{DynamicResource AccentFillColorTertiaryBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource AccentTextFillColorTertiaryBrush}" />
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasSelectedDays" Value="True" />
                <Condition Property="IsEnabled" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="BorderBrush" Value="{DynamicResource AccentFillColorDisabledBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
            </MultiTrigger>

            <Trigger Property="IsFocused" Value="True">
              <Setter TargetName="ButtonFocusVisual" Property="Visibility" Value="Visible" />
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>