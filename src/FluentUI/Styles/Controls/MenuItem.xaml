<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/FluentUI;component/Styles/Controls/MenuItem.ScrollViewer.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
         TargetType="{x:Type Separator}">
    <Setter Property="Background" Value="{DynamicResource DividerStrokeColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource DividerStrokeColorDefaultBrush}" />
    <Setter Property="MinHeight" Value="1" />
    <Setter Property="Margin" Value="1,1,1,2" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Margin="0" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}"
                   TargetType="{x:Type MenuItem}">
    <Border x:Name="templateRoot"
            SnapsToDevicePixels="True"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            CornerRadius="4">
      <Grid VerticalAlignment="Center"
            Margin="{TemplateBinding Padding}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <ContentPresenter x:Name="Icon"
                          ContentSource="Icon"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          Width="16"
                          Height="16"
                          Margin="0,0,14,0" />
        <TextBlock x:Name="Glyph"
                   VerticalAlignment="Center"
                   Margin="0,0,14,0"
                   Foreground="{TemplateBinding Foreground}"
                   FontFamily="{DynamicResource IconsFontFamily}"
                   FontSize="12"
                   Visibility="Collapsed"
                   Text="&#xF78C;" />
        <ContentPresenter Grid.Column="1"
                          ContentSource="Header"
                          RecognizesAccessKey="True"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter TargetName="Glyph" Property="Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}"
                   TargetType="{x:Type MenuItem}">
    <Border x:Name="templateRoot"
            SnapsToDevicePixels="True"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            CornerRadius="4">
      <Grid VerticalAlignment="Center"
            Margin="{TemplateBinding Padding}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <ContentPresenter x:Name="Icon"
                          ContentSource="Icon"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          Width="16"
                          Height="16"
                          Margin="0,0,14,0" />
        <TextBlock x:Name="Glyph"
                   VerticalAlignment="Center"
                   Margin="0,0,14,0" 
                   Foreground="{TemplateBinding Foreground}"
                   FontFamily="{DynamicResource IconsFontFamily}"
                   FontSize="12"
                   Visibility="Collapsed"
                   Text="&#xF78C;" />
        <ContentPresenter Grid.Column="1"
                          ContentSource="Header"
                          RecognizesAccessKey="True"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        <Popup x:Name="PART_Popup"
               AllowsTransparency="True"
               Focusable="False"
               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
               Placement="Bottom"
               PlacementTarget="{Binding ElementName=templateRoot}">
          <Border Name="SubMenuBorder"
                  Background="{DynamicResource AcrylicBackgroundFillColorDefaultBrush}"
                  BorderBrush="{DynamicResource SurfaceStrokeColorFlyoutBrush}"
                  BorderThickness="1"
                  CornerRadius="7"
                  SnapsToDevicePixels="True"
                  Margin="20"
                  Effect="{DynamicResource FlyoutShadow}">
            <ScrollViewer Name="SubMenuScrollViewer"
                          Margin="1,0"
                          Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
              <Grid RenderOptions.ClearTypeHint="Enabled"
                    Grid.IsSharedSizeScope="True">
                <ItemsPresenter Name="ItemsPresenter"
                                Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType=Menu}}"
                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                KeyboardNavigation.TabNavigation="Cycle"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
            </ScrollViewer>
          </Border>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsSuspendingPopupAnimation" Value="True">
        <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
      </Trigger>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter TargetName="Glyph" Property="Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}"
                   TargetType="{x:Type MenuItem}">
    <Border x:Name="templateRoot"
            SnapsToDevicePixels="True"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            CornerRadius="4">
      <Grid Margin="{TemplateBinding Padding}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto" />
          <ColumnDefinition Width="0" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="30" />
          <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto" />
        </Grid.ColumnDefinitions>
        <ContentPresenter x:Name="Icon"
                          ContentSource="Icon"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          Width="16"
                          Height="16"
                          Margin="0,0,14,0" />
        <TextBlock x:Name="Glyph"
                   ClipToBounds="False"
                   VerticalAlignment="Center"
                   Margin="0,0,14,0"
                   Foreground="{TemplateBinding Foreground}"
                   FontFamily="{DynamicResource IconsFontFamily}"
                   FontSize="12"
                   Text="&#xF78C;"
                   Visibility="Collapsed" />
        <ContentPresenter x:Name="menuHeaderContainer"
                          Grid.Column="2"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          ContentSource="Header"
                          RecognizesAccessKey="True"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        <TextBlock x:Name="menuGestureText"
                   Grid.Column="4"
                   Text="{TemplateBinding InputGestureText}"
                   Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                   VerticalAlignment="Center"
                   Margin="11,0,0,0" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter TargetName="Glyph" Property="Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}"
                   TargetType="{x:Type MenuItem}">
    <Border x:Name="templateRoot"
            SnapsToDevicePixels="True"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            CornerRadius="4">
      <Grid Margin="{TemplateBinding Padding}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto" />
          <ColumnDefinition Width="0" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="30" />
          <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <ContentPresenter x:Name="Icon"
                          ContentSource="Icon"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          Width="16"
                          Height="16"
                          Margin="0,0,14,0" />
        <TextBlock x:Name="Glyph"
                   ClipToBounds="False"
                   VerticalAlignment="Center"
                   Margin="0,0,14,0"
                   Foreground="{TemplateBinding Foreground}"
                   FontFamily="{DynamicResource IconsFontFamily}"
                   FontSize="12"
                   Text="&#xF78C;"
                   Visibility="Collapsed" />
        <ContentPresenter Grid.Column="2"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          ContentSource="Header"
                          RecognizesAccessKey="True"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        <TextBlock Grid.Column="4"
                   Text="{TemplateBinding InputGestureText}"
                   VerticalAlignment="Center"
                   Opacity="0.7" />
        <TextBlock x:Name="RightArrow"
                   Grid.Column="5"
                   VerticalAlignment="Center"
                   Margin="11,0,0,0"
                   Foreground="{TemplateBinding Foreground}"
                   FontFamily="{DynamicResource IconsFontFamily}"
                   FontSize="12"
                   Text="&#xE974;" />
        <Popup x:Name="PART_Popup"
               AllowsTransparency="True"
               Focusable="False"
               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
               Placement="Right"
               HorizontalOffset="13"
               VerticalOffset="-10">
          <Border Name="SubMenuBorder"
                  Background="{Binding Background, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                  BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                  BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                  CornerRadius="7"
                  SnapsToDevicePixels="True"
                  Margin="20"
                  Effect="{DynamicResource FlyoutShadow}">
            <ScrollViewer Name="SubMenuScrollViewer"
                          Margin="1,0"
                          Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
              <Grid RenderOptions.ClearTypeHint="Enabled">
                <ItemsPresenter Name="ItemsPresenter"
                                Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
            </ScrollViewer>
          </Border>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsSuspendingPopupAnimation" Value="True">
        <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
      </Trigger>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter TargetName="Glyph" Property="Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="True">
        <Setter Property="Foreground" TargetName="RightArrow" Value="{DynamicResource TextFillColorSecondaryBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style TargetType="{x:Type MenuItem}">
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="Background" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
    <Setter Property="Padding" Value="11,6,11,8" />
    <Setter Property="Margin" Value="4,2" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}}" />
    <Style.Triggers>
      <Trigger Property="Role" Value="TopLevelHeader">
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}}" />
        <Setter Property="Padding" Value="11,4,11,6" />
        <Setter Property="Margin" Value="4" />
      </Trigger>
      <Trigger Property="Role" Value="TopLevelItem">
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}}" />
        <Setter Property="Padding" Value="11,4,11,6" />
        <Setter Property="Margin" Value="4" />
      </Trigger>
      <Trigger Property="Role" Value="SubmenuHeader">
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  
</ResourceDictionary>