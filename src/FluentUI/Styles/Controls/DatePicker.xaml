<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  
  <Style TargetType="{x:Type DatePicker}">
    <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
    <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource TextControlElevationBorderBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="CalendarStyle" Value="{DynamicResource {x:Type Calendar}}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="12,5,36,7" />
    <Setter Property="IsTodayHighlighted" Value="True" />
    <Setter Property="SelectedDateFormat" Value="Short" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePicker}">
          <Grid x:Name="PART_Root"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup Name="CommonStates">
                <VisualState Name="Normal" />
                <VisualState Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PART_DisabledVisual"
                                     Storyboard.TargetProperty="Opacity"
                                     To="1"
                                     Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <DatePickerTextBox x:Name="PART_TextBox"
                               HorizontalContentAlignment="Stretch"
                               VerticalContentAlignment="Stretch"
                               Focusable="{TemplateBinding Focusable}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               Background="{TemplateBinding Background}"
                               Padding="{TemplateBinding Padding}" />
            <Button x:Name="PART_Button"
                    Style="{DynamicResource SubtleIconOnlyButtonStyle}"
                    Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Right"
                    Padding="11,9"
                    FontSize="12"
                    Focusable="False"
                    Content="&#xE787;" />
            <Grid x:Name="PART_DisabledVisual"
                  Opacity="0"
                  IsHitTestVisible="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Rectangle Grid.Row="0"
                         Grid.Column="0"
                         RadiusX="1"
                         RadiusY="1"
                         Fill="#A5FFFFFF" />
              <Rectangle Grid.Row="0"
                         Grid.Column="1"
                         RadiusX="1"
                         RadiusY="1"
                         Fill="#A5FFFFFF"
                         Height="18"
                         Width="19"
                         Margin="3,0,3,0" />
              <Popup x:Name="PART_Popup"
                     PlacementTarget="{Binding ElementName=PART_TextBox}"
                     Placement="Bottom"
                     StaysOpen="False"
                     AllowsTransparency="True" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type DatePickerTextBox}"
         TargetType="{x:Type DatePickerTextBox}"
         BasedOn="{StaticResource {x:Type TextBoxBase}}">
    <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
    <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource TextControlElevationBorderBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="CaretBrush" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="12,5,36,7" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="AllowDrop" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="SelectionBrush" Value="{DynamicResource AccentFillColorSlectedTextBackgroundBrush}" />
    <Setter Property="SelectionTextBrush" Value="{DynamicResource TextOnAccentFillColorSelectedTextBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">

          <Grid>
            <VisualStateManager.VisualStateGroups>

              <VisualStateGroup Name="WatermarkStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="Unwatermarked" />
                <VisualState Name="Watermarked">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PART_ContentHost"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0"
                                     Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="PART_Watermark"
                                     Storyboard.TargetProperty="Opacity"
                                     To="1"
                                     Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>

              <VisualStateGroup Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                  <VisualTransition To="MouseOver" GeneratedDuration="0:0:0.1" />
                </VisualStateGroup.Transitions>
                <VisualState Name="Normal" />
                <VisualState Name="MouseOver" />
              </VisualStateGroup>

              <VisualStateGroup Name="FocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="Unfocused" />
                <VisualState Name="Focused" />
              </VisualStateGroup>

            </VisualStateManager.VisualStateGroups>

            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True"
                    CornerRadius="4" />

            <ContentControl x:Name="PART_Watermark"
                            Margin="{TemplateBinding Padding}"
                            Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Opacity="0"
                            Focusable="False"
                            IsHitTestVisible="False" />

            <ScrollViewer x:Name="PART_ContentHost"
                          Focusable="False"
                          HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Hidden" />

            <Border x:Name="borderAccent"
                    SnapsToDevicePixels="True"
                    CornerRadius="4" />
          </Grid>

          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
              <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlFillColorInputActiveBrush}" />
              <Setter TargetName="borderAccent" Property="BorderThickness" Value="0,0,0,2" />
              <Setter TargetName="borderAccent" Property="BorderBrush" Value="{DynamicResource AccentFillColorDefaultBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True" />
          <Condition Property="IsSelectionActive" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="SelectionBrush" Value="{DynamicResource AccentFillColorSlectedTextBackgroundBrush}" />
        <Setter Property="SelectionTextBrush" Value="{DynamicResource TextOnAccentFillColorSelectedTextBrush}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>