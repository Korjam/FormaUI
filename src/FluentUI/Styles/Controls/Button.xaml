<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <!-- Uncomment for designtime resources -->
  <!--
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/FluentUI;component/Styles/Values/Text.xaml" />
    <ResourceDictionary Source="pack://application:,,,/FluentUI;component/Styles/Themes/Accent.xaml" />
    <ResourceDictionary Source="pack://application:,,,/FluentUI;component/Styles/Themes/ColorsLight.xaml" />
  </ResourceDictionary.MergedDictionaries>
  -->

  <Style
    x:Key="BaseButtonStyle"
    TargetType="{x:Type ButtonBase}">
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
  </Style>

  <ControlTemplate
    x:Key="StandardButtonTemplate"
    TargetType="{x:Type ButtonBase}">

    <Grid>

      <Border
        x:Name="background"
        Background="{TemplateBinding Background}"
        BorderThickness="0"
        CornerRadius="3"
        SnapsToDevicePixels="True" />

      <Border
        x:Name="border"
        BorderThickness="{TemplateBinding BorderThickness}"
        BorderBrush="{TemplateBinding BorderBrush}"
        CornerRadius="3"
        SnapsToDevicePixels="True" />

      <ContentPresenter
        x:Name="contentPresenter"
        RecognizesAccessKey="True"
        Margin="{TemplateBinding Padding}"
        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
        Focusable="False" />

    </Grid>

    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}" TargetName="background" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource ControlFillColorTertiaryBrush}" TargetName="background" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" TargetName="border" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" TargetName="contentPresenter" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" TargetName="background" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" TargetName="border" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="AccentButtonTemplate"
    TargetType="{x:Type ButtonBase}">

    <Grid>

      <Border
        x:Name="background"
        Background="{TemplateBinding Background}"
        BorderThickness="0"
        CornerRadius="4"
        SnapsToDevicePixels="True" />

      <Border
        x:Name="border"
        BorderThickness="{TemplateBinding BorderThickness}"
        BorderBrush="{TemplateBinding BorderBrush}"
        CornerRadius="4"
        SnapsToDevicePixels="True" />

      <ContentPresenter
        x:Name="contentPresenter"
        RecognizesAccessKey="True"
        Margin="{TemplateBinding Padding}"
        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
        Focusable="False" />

    </Grid>

    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource AccentFillColorSecondaryBrush}" TargetName="background" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource AccentFillColorTertiaryBrush}" TargetName="background" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorOnAccentDefaultBrush}" TargetName="border" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource TextOnAccentFillColorSecondaryBrush}" TargetName="contentPresenter" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{DynamicResource AccentFillColorDisabledBrush}" TargetName="background" />
        <Setter Property="BorderBrush" Value="Transparent" TargetName="border" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  
  <Style x:Key="StandardButtonStyle"
         TargetType="{x:Type ButtonBase}"
         BasedOn="{StaticResource BaseButtonStyle}">
    <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="Padding" Value="11,4,11,6" />
    <Setter Property="Template" Value="{DynamicResource StandardButtonTemplate}" />
  </Style>
  
  <Style x:Key="AccentButtonStyle"
         TargetType="{x:Type ButtonBase}"
         BasedOn="{StaticResource BaseButtonStyle}">
    <Setter Property="Background" Value="{DynamicResource AccentFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource AccentControlElevationBorderBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource TextOnAccentFillColorPrimaryBrush}" />
    <Setter Property="Padding" Value="12,5,12,7" />
    <Setter Property="Template" Value="{DynamicResource AccentButtonTemplate}" />
  </Style>

  <Style x:Key="StandardCompactButtonStyle"
         TargetType="{x:Type ButtonBase}"
         BasedOn="{StaticResource StandardButtonStyle}">
    <Setter Property="Padding" Value="11,0,11,2" />
  </Style>

  <Style
    x:Key="{x:Type Button}"
    BasedOn="{StaticResource StandardButtonStyle}"
    TargetType="{x:Type Button}" />

</ResourceDictionary>