<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <!-- Uncomment for designtime resources -->
  <!--
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/FluentUI;component/Styles/Values/Text.xaml" />
    <ResourceDictionary Source="pack://application:,,,/FluentUI;component/Styles/Themes/Accent.xaml" />
    <ResourceDictionary Source="pack://application:,,,/FluentUI;component/Styles/Themes/ColorsLight.xaml" />
  </ResourceDictionary.MergedDictionaries>
  -->

  <Style x:Key="FocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Rectangle
              RadiusX="4"
              RadiusY="4"
              Margin="-3"
              SnapsToDevicePixels="True"
              Stroke="{DynamicResource FocusStrokeColorOuterBrush}"
              StrokeThickness="2" />
            <Rectangle
              RadiusX="4"
              RadiusY="4"
              Margin="-1"
              SnapsToDevicePixels="True"
              Stroke="{DynamicResource FocusStrokeColorInnerBrush}"
              StrokeThickness="1" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style
    x:Key="{x:Static SystemParameters.FocusVisualStyleKey}"
    BasedOn="{StaticResource FocusVisual}" />

  <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
    <Setter Property="Background" Value="{DynamicResource AccentFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource AccentControlElevationBorderBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource TextOnAccentFillColorPrimaryBrush}" />
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Padding" Value="12,5,12,7" />
    <Setter Property="MinWidth" Value="120" />
    <Setter Property="MinHeight" Value="32" />
    <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Grid>
            
            <Border
              x:Name="background"
              Background="{TemplateBinding Background}"
              BorderThickness="0"
              CornerRadius="4"
              SnapsToDevicePixels="True" />

            <Border
              x:Name="border"
              BorderThickness="{TemplateBinding BorderThickness}"
              BorderBrush="{TemplateBinding BorderBrush}"
              CornerRadius="4"
              SnapsToDevicePixels="True" />
            
            <ContentPresenter
              x:Name="contentPresenter"
              RecognizesAccessKey="True"
              Margin="{TemplateBinding Padding}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              Focusable="False" />

          </Grid>

          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource AccentFillColorSecondaryBrush}" TargetName="background" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource AccentFillColorTertiaryBrush}" TargetName="background" />
              <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorOnAccentDefaultBrush}" TargetName="border" />
              <Setter Property="TextElement.Foreground" Value="{DynamicResource TextOnAccentFillColorSecondaryBrush}" TargetName="contentPresenter" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Background" Value="{DynamicResource AccentFillColorDisabledBrush}" TargetName="background" />
              <Setter Property="BorderBrush" Value="Transparent" TargetName="border" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style
    x:Key="{x:Type Button}"
    BasedOn="{StaticResource BaseButtonStyle}"
    TargetType="{x:Type Button}"/>

</ResourceDictionary>