<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:behaviors="clr-namespace:FluentUI.Behaviors">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/FluentUI;component/Styles/Controls/TabControl.ScrollViewer.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Style TargetType="{x:Type TabControl}">
    <Setter Property="Background" Value="{DynamicResource SolidBackgroundFillColorTertiaryBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource CardStrokeColorDefaultBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="behaviors:SelectorBehaviors.ScrollIntoSelectedItem" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid x:Name="templateRoot"
            ClipToBounds="True"
            KeyboardNavigation.TabNavigation="Local"
            SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition0" />
              <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="RowDefinition0" Height="Auto" />
              <RowDefinition x:Name="RowDefinition1" Height="*" />
            </Grid.RowDefinitions>
            <ScrollViewer x:Name="headerPanel"
              Margin="8,2,2,0"
              Panel.ZIndex="1"
              KeyboardNavigation.TabIndex="1"
              Style="{StaticResource TabHorizontalOverflowScrollViewer}">
              <StackPanel x:Name="headerContainer"
                Background="Transparent"
                IsItemsHost="True"
                Orientation="Horizontal" />
            </ScrollViewer>
            <Border x:Name="contentPanel"
              Grid.Row="1"
              Grid.Column="0"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              KeyboardNavigation.DirectionalNavigation="Contained"
              KeyboardNavigation.TabIndex="2"
              KeyboardNavigation.TabNavigation="Local">
              <ContentPresenter x:Name="PART_SelectedContentHost"
                Margin="{TemplateBinding Padding}"
                ContentSource="SelectedContent"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
              <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="headerPanel" Property="Grid.Row" Value="1" />
              <Setter TargetName="headerPanel" Property="Margin" Value="8,0,2,2" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
              <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
              <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
              <Setter TargetName="contentPanel" Property="Grid.Column" Value="1" />
              <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="headerContainer" Property="Orientation" Value="Vertical" />
              <Setter TargetName="headerPanel" Property="Grid.Column" Value="0" />
              <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="headerPanel" Property="Margin" Value="2,8,0,2" />

              <Setter TargetName="headerPanel" Property="Style" Value="{StaticResource TabVerticalOverflowScrollViewer}" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
              <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
              <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
              <Setter TargetName="contentPanel" Property="Grid.Column" Value="0" />
              <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="headerContainer" Property="Orientation" Value="Vertical" />
              <Setter TargetName="headerPanel" Property="Grid.Column" Value="1" />
              <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="headerPanel" Property="Margin" Value="0,8,2,2" />

              <Setter TargetName="headerPanel" Property="Style" Value="{StaticResource TabVerticalOverflowScrollViewer}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type TabItem}">
    <Setter Property="BorderBrush" Value="{DynamicResource CardStrokeColorDefaultBrush}" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}" />
    <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
    <Setter Property="MinHeight" Value="32" />
    <Setter Property="MinWidth" Value="120" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="8,0,8,2" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="behaviors:TabControlBehavior.CanClose" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
            <Border x:Name="divider"
              Height="16"
              HorizontalAlignment="Right"
              VerticalAlignment="Center"
              BorderBrush="{DynamicResource DividerStrokeColorDefaultBrush}"
              BorderThickness="1,0,0,0" />
            <Border x:Name="selectionBorder"
              BorderBrush="{DynamicResource CardStrokeColorDefaultBrush}"
              BorderThickness="1,1,1,0"
              CornerRadius="8,8,0,0" />

            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <ContentControl x:Name="iconPlaceHolder"
                Grid.Column="0"
                Width="16"
                Height="16"
                Margin="8,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="{TemplateBinding behaviors:TabControlBehavior.Icon}" />
              <ContentPresenter x:Name="contentPresenter"
                Grid.Column="1"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                ContentSource="Header"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              <Button x:Name="closeButton"
                Grid.Column="2"
                Width="30"
                Height="22"
                Margin="-3,5,5,5"
                Padding="7,3"
                HorizontalAlignment="Right"
                Command="{x:Static behaviors:TabControlBehavior.CloseCommand}"
                Content="&#xE624;"
                FontSize="12"
                Style="{DynamicResource SubtleIconOnlyButtonStyle}"
                Visibility="Collapsed" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>

            <Trigger Property="behaviors:TabControlBehavior.Icon" Value="{x:Null}">
              <Setter TargetName="iconPlaceHolder" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=(behaviors:TabControlBehavior.CanClose), RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(behaviors:TabControlBehavior.CanClose), RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="closeButton" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>

            <Trigger Property="IsSelected" Value="True">
              <Setter Property="FontSize" Value="{DynamicResource BodyStrongFontSize}" />
              <Setter Property="FontWeight" Value="{DynamicResource BodyStrongFontWeight}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
              <Setter TargetName="divider" Property="Opacity" Value="0" />
              <Setter TargetName="selectionBorder" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType=TabControl}}" />
              <Setter TargetName="selectionBorder" Property="Opacity" Value="1" />
            </Trigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsSelected" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="divider" Property="Opacity" Value="0" />
              <Setter TargetName="selectionBorder" Property="Background" Value="{DynamicResource LayerOnMicaBaseAltFillColorSecondaryBrush}" />
              <Setter TargetName="selectionBorder" Property="Opacity" Value="1" />
            </MultiTrigger>

            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="0,0,0,1" />
            </MultiDataTrigger>

            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter TargetName="selectionBorder" Property="CornerRadius" Value="0,0,8,8" />
            </Trigger>

            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter TargetName="divider" Property="BorderThickness" Value="0,0,0,1" />
              <Setter TargetName="divider" Property="Height" Value="Auto" />
              <Setter TargetName="divider" Property="Width" Value="16" />
              <Setter TargetName="divider" Property="HorizontalAlignment" Value="Center" />
              <Setter TargetName="divider" Property="VerticalAlignment" Value="Bottom" />
              <Setter TargetName="selectionBorder" Property="CornerRadius" Value="8,0,0,8" />
            </Trigger>

            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter TargetName="divider" Property="BorderThickness" Value="0,1,0,0" />
              <Setter TargetName="divider" Property="Height" Value="Auto" />
              <Setter TargetName="divider" Property="Width" Value="16" />
              <Setter TargetName="divider" Property="HorizontalAlignment" Value="Center" />
              <Setter TargetName="divider" Property="VerticalAlignment" Value="Bottom" />
              <Setter TargetName="selectionBorder" Property="CornerRadius" Value="0,8,8,0" />
            </Trigger>

            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="0,0,1,0" />
            </MultiDataTrigger>

            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="1,1,0,1" />
            </MultiDataTrigger>

            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="0,1,0,0" />
            </MultiDataTrigger>

            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="1,0,1,1" />
            </MultiDataTrigger>

            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="1,0,0,0" />
            </MultiDataTrigger>

            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="0,1,1,1" />
            </MultiDataTrigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>