<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  
  <LinearGradientBrush x:Key="TabItem.Static.Background" StartPoint="0,0" EndPoint="0,1" >
    <GradientStop Color="#F0F0F0" Offset="0.0" />
    <GradientStop Color="#E5E5E5" Offset="1.0" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC" />
  <LinearGradientBrush x:Key="TabItem.MouseOver.Background" StartPoint="0,0" EndPoint="0,1" >
    <GradientStop Color="#ECF4FC" Offset="0.0" />
    <GradientStop Color="#DCECFC" Offset="1.0" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA" />
  <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF" />
  <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC" />
  <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0" />
  <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9" />

  <Style TargetType="{x:Type TabControl}">
    <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Background" Value="{DynamicResource SolidBackgroundFillColorTertiaryBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource CardStrokeColorDefaultBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid x:Name="templateRoot" 
                ClipToBounds="True" 
                SnapsToDevicePixels="True" 
                KeyboardNavigation.TabNavigation="Local">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition0" />
              <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="RowDefinition0" Height="Auto" />
              <RowDefinition x:Name="RowDefinition1" Height="*" />
            </Grid.RowDefinitions>
            <Grid x:Name="headerPanel" 
                  Grid.Column="0" 
                  Grid.Row="0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <TabPanel Background="Transparent"
                        IsItemsHost="True" 
                        Margin="2,2,2,0" 
                        KeyboardNavigation.TabIndex="1" 
                        HorizontalAlignment="Left"
                        Panel.ZIndex="1" />
              <Border x:Name="fillBorder"
                      Grid.Column="1"
                      BorderBrush="{DynamicResource CardStrokeColorDefaultBrush}"
                      BorderThickness="0,0,0,1"
                      Margin="-2,0,0,0"/>
            </Grid>
            <Border x:Name="contentPanel" 
                    Grid.Column="0" 
                    Grid.Row="1" 
                    KeyboardNavigation.DirectionalNavigation="Contained"
                    KeyboardNavigation.TabNavigation="Local" 
                    KeyboardNavigation.TabIndex="2" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}">
              <ContentPresenter x:Name="PART_SelectedContentHost"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Margin="{TemplateBinding Padding}"
                                ContentSource="SelectedContent" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter Property="Grid.Row" TargetName="headerPanel" Value="1" />
              <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
              <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
              <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
              <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter Property="Grid.Row" TargetName="headerPanel" Value="0" />
              <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
              <Setter Property="Grid.Column" TargetName="headerPanel" Value="0" />
              <Setter Property="Grid.Column" TargetName="contentPanel" Value="1" />
              <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
              <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
              <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
              <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
              <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter Property="Grid.Row" TargetName="headerPanel" Value="0" />
              <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
              <Setter Property="Grid.Column" TargetName="headerPanel" Value="1" />
              <Setter Property="Grid.Column" TargetName="contentPanel" Value="0" />
              <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
              <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
              <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
              <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
              <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type TabItem}">
    <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
    <Setter Property="Background" Value="{DynamicResource TabItem.Static.Background}" />
    <Setter Property="BorderBrush" Value="{DynamicResource CardStrokeColorDefaultBrush}" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="MinWidth" Value="120" />
    <Setter Property="Padding" Value="0,0,0,2" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
            <Border x:Name="divider" 
                    BorderThickness="1,0,0,0" 
                    BorderBrush="{DynamicResource DividerStrokeColorDefaultBrush}"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Height="16" />
            <Border x:Name="selectionBorder" 
                    BorderThickness="1,1,1,0" 
                    CornerRadius="8,8,0,0"
                    BorderBrush="{DynamicResource CardStrokeColorDefaultBrush}" />

            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Border x:Name="iconPlaceHolder"
                      Grid.Column="0"
                      BorderThickness="1"
                      BorderBrush="{DynamicResource TextFillColorSecondaryBrush}"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      Height="16"
                      Width="16"
                      Margin="8,0"
                      CornerRadius="8" />
              <ContentPresenter x:Name="contentPresenter" 
                                Grid.Column="1"
                                ContentSource="Header" 
                                HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                Focusable="False" 
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True" />
              <Button x:Name="closeButton"
                      Grid.Column="2"
                      HorizontalAlignment="Right"
                      FontSize="12"
                      Margin="5"
                      Width="30"
                      Height="22"
                      Padding="7,3"
                      Style="{DynamicResource SubtleIconOnlyButtonStyle}"
                      Content="&#xE624;" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="divider" Property="Opacity" Value="0" />
              <Setter TargetName="selectionBorder" Property="Opacity" Value="1" />
              <Setter TargetName="selectionBorder" Property="Background" Value="{DynamicResource SolidBackgroundFillColorTertiaryBrush}" />
              <Setter Property="FontSize" Value="{DynamicResource BodyStrongFontSize}" />
              <Setter Property="FontWeight" Value="{DynamicResource BodyStrongFontWeight}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="0,0,0,1" />
            </Trigger>
            
            
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
              </MultiDataTrigger.Conditions>
              <!--<Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource TabItem.MouseOver.Background}" />
              <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource TabItem.MouseOver.Border}" />
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="1,1,0,1" />
              <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />-->
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
              </MultiDataTrigger.Conditions>
              <!--<Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource TabItem.MouseOver.Background}" />
              <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource TabItem.MouseOver.Border}" />
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="1,0,1,1" />
              <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />-->
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
              </MultiDataTrigger.Conditions>
              <!--<Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource TabItem.MouseOver.Background}" />
              <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource TabItem.MouseOver.Border}" />
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="0,1,1,1" />
              <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />-->
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
              </MultiDataTrigger.Conditions>
              <!--<Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource TabItem.MouseOver.Background}" />
              <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource TabItem.MouseOver.Border}" />
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="1,1,1,0" />
              <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />-->
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
              </MultiDataTrigger.Conditions>
              <!--<Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
              <Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource TabItem.Disabled.Background}" />
              <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource TabItem.Disabled.Border}" />
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="1,1,0,1" />
              <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />-->
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
              </MultiDataTrigger.Conditions>
              <!--<Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
              <Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource TabItem.Disabled.Background}" />
              <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource TabItem.Disabled.Border}" />
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="1,0,1,1" />
              <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />-->
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
              </MultiDataTrigger.Conditions>
              <!--<Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
              <Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource TabItem.Disabled.Background}" />
              <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource TabItem.Disabled.Border}" />
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="0,1,1,1" />
              <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />-->
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
              </MultiDataTrigger.Conditions>
              <!--<Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
              <Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource TabItem.Disabled.Background}" />
              <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource TabItem.Disabled.Border}" />
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="1,1,1,0" />
              <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />-->
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
              </MultiDataTrigger.Conditions>
              <!--<Setter TargetName="selectionBorder" Property="BorderThickness" Value="1,1,0,1" />
              <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />-->
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
              </MultiDataTrigger.Conditions>
              <!--<Setter Property="Panel.ZIndex" Value="1" />
              <Setter Property="Margin" Value="-2,-2,0,-2" />
              <Setter TargetName="selectionBorder" Property="Opacity" Value="1" />
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="1,1,0,1" />
              <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />-->
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
              </MultiDataTrigger.Conditions>
              <!--<Setter TargetName="selectionBorder" Property="BorderThickness" Value="1,0,1,1" />
              <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />-->
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
              </MultiDataTrigger.Conditions>
              <!--<Setter Property="Panel.ZIndex" Value="1" />
              <Setter Property="Margin" Value="-2,0,-2,-2" />
              <Setter TargetName="selectionBorder" Property="Opacity" Value="1" />
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="1,0,1,1" />
              <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />-->
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
              </MultiDataTrigger.Conditions>
              <!--<Setter TargetName="selectionBorder" Property="BorderThickness" Value="0,1,1,1" />
              <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />-->
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
              </MultiDataTrigger.Conditions>
              <!--<Setter Property="Panel.ZIndex" Value="1" />
              <Setter Property="Margin" Value="0,-2,-2,-2" />
              <Setter TargetName="selectionBorder" Property="Opacity" Value="1" />
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="0,1,1,1" />
              <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />-->
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
              </MultiDataTrigger.Conditions>
              <!--<Setter TargetName="selectionBorder" Property="BorderThickness" Value="1,1,1,0" />
              <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />-->
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
              </MultiDataTrigger.Conditions>
              <!--<Setter Property="Panel.ZIndex" Value="1" />
              <Setter Property="Margin" Value="-2,-2,-2,0" />
              <Setter TargetName="selectionBorder" Property="Opacity" Value="1" />
              <Setter TargetName="selectionBorder" Property="BorderThickness" Value="1,1,1,0" />
              <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />-->
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
</ResourceDictionary>