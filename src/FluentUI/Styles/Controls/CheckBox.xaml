<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <Style TargetType="{x:Type CheckBox}">
    <Setter Property="Background" Value="{DynamicResource ControlAltFillColorSecondaryBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ControlStrongStrokeColorDefaultBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}" />
    <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <Grid x:Name="templateRoot"
            Background="Transparent"
            SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border
              Width="20"
              Height="20"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="4">
              <TextBlock x:Name="optionMark"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontFamily="{DynamicResource IconsFontFamily}"
                FontSize="12"
                Foreground="{DynamicResource TextOnAccentFillColorPrimaryBrush}"
                Text="&#xF78C;"
                Visibility="Hidden" />
            </Border>
            <ContentPresenter x:Name="contentPresenter"
              Grid.Column="1"
              Margin="{TemplateBinding Padding}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              Focusable="False"
              RecognizesAccessKey="True"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="True">
              <Setter Property="Padding" Value="8,5,0,7" />
              <Setter TargetName="templateRoot" Property="Margin" Value="4,0,8,0" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Background" Value="{DynamicResource AccentFillColorDefaultBrush}" />
              <Setter Property="BorderThickness" Value="0" />
              <Setter TargetName="optionMark" Property="Text" Value="&#xF78C;" />
              <Setter TargetName="optionMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
              <Setter Property="Background" Value="{DynamicResource AccentFillColorDefaultBrush}" />
              <Setter Property="BorderThickness" Value="0" />
              <Setter TargetName="optionMark" Property="Text" Value="&#xE629;" />
              <Setter TargetName="optionMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
            </Trigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="False" />
                <Condition Property="IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource ControlAltFillColorTertiaryBrush}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="False" />
                <Condition Property="IsPressed" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource ControlAltFillColorQuarternaryBrush}" />
              <Setter Property="BorderBrush" Value="{DynamicResource ControlStrongColorDisabledBrush}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="False" />
                <Condition Property="IsEnabled" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource ControlAltFillColorDisabledBrush}" />
              <Setter Property="BorderBrush" Value="{DynamicResource ControlStrongColorDisabledBrush}" />
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="True" />
                <Condition Property="IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource AccentFillColorSecondaryBrush}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="True" />
                <Condition Property="IsPressed" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource AccentFillColorTertiaryBrush}" />
              <Setter TargetName="optionMark" Property="Foreground" Value="{DynamicResource TextOnAccentFillColorSecondaryBrush}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="True" />
                <Condition Property="IsEnabled" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource AccentFillColorDisabledBrush}" />
              <Setter TargetName="optionMark" Property="Foreground" Value="{DynamicResource TextOnAccentFillColorDisabledBrush}" />
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="{x:Null}" />
                <Condition Property="IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource AccentFillColorSecondaryBrush}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="{x:Null}" />
                <Condition Property="IsPressed" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource AccentFillColorTertiaryBrush}" />
              <Setter TargetName="optionMark" Property="Foreground" Value="{DynamicResource TextOnAccentFillColorSecondaryBrush}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="{x:Null}" />
                <Condition Property="IsEnabled" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{DynamicResource AccentFillColorDisabledBrush}" />
              <Setter TargetName="optionMark" Property="Foreground" Value="{DynamicResource TextOnAccentFillColorDisabledBrush}" />
            </MultiTrigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>