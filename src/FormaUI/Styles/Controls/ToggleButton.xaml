<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/FormaUI;component/Styles/Controls/Button.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Style x:Key="StandardToggleButtonStyle"
    BasedOn="{StaticResource StandardButtonStyle}"
    TargetType="{x:Type ToggleButton}">
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Background" Value="{DynamicResource AccentFillColorDefaultBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentControlElevationBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextOnAccentFillColorPrimaryBrush}" />
        <Setter Property="Template" Value="{DynamicResource AccentButtonTemplate}" />
      </Trigger>
      <Trigger Property="IsChecked" Value="False">
        <Setter Property="Template" Value="{DynamicResource StandardButtonTemplate}" />
      </Trigger>
      <Trigger Property="IsChecked" Value="{x:Null}">
        <Setter Property="Template" Value="{DynamicResource StandardButtonTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="StandardCompactToggleButtonStyle"
    BasedOn="{StaticResource StandardButtonStyle}"
    TargetType="{x:Type ToggleButton}">
    <Setter Property="Padding" Value="11,0,11,2" />
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Background" Value="{DynamicResource AccentFillColorDefaultBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentControlElevationBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextOnAccentFillColorPrimaryBrush}" />
        <Setter Property="Template" Value="{DynamicResource AccentButtonTemplate}" />
      </Trigger>
      <Trigger Property="IsChecked" Value="False">
        <Setter Property="Template" Value="{DynamicResource StandardButtonTemplate}" />
      </Trigger>
      <Trigger Property="IsChecked" Value="{x:Null}">
        <Setter Property="Template" Value="{DynamicResource StandardButtonTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="{x:Type ToggleButton}"
    BasedOn="{StaticResource StandardToggleButtonStyle}"
    TargetType="{x:Type ToggleButton}" />

</ResourceDictionary>