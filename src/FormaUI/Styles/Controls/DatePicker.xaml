<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <Style TargetType="{x:Type DatePicker}">
    <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource TextControlElevationBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="CalendarStyle" Value="{DynamicResource {x:Type Calendar}}" />
    <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="Padding" Value="12,5,36,7" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="IsTodayHighlighted" Value="True" />
    <Setter Property="SelectedDateFormat" Value="Short" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePicker}">
          <Grid x:Name="PART_Root"
            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
            <DatePickerTextBox x:Name="PART_TextBox"
              Padding="{TemplateBinding Padding}"
              HorizontalContentAlignment="Stretch"
              VerticalContentAlignment="Stretch"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Focusable="{TemplateBinding Focusable}" />
            <Button x:Name="PART_Button"
              Padding="11,9"
              HorizontalAlignment="Right"
              VerticalAlignment="Top"
              Content="&#xE787;"
              Focusable="False"
              FontSize="12"
              Foreground="{DynamicResource TextFillColorSecondaryBrush}"
              Style="{DynamicResource SubtleIconOnlyButtonStyle}" />
            <Grid x:Name="PART_DisabledVisual"
              IsHitTestVisible="False"
              Opacity="0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Rectangle
                Grid.Row="0"
                Grid.Column="0"
                Fill="#A5FFFFFF"
                RadiusX="1"
                RadiusY="1" />
              <Rectangle
                Grid.Row="0"
                Grid.Column="1"
                Width="19"
                Height="18"
                Margin="3,0,3,0"
                Fill="#A5FFFFFF"
                RadiusX="1"
                RadiusY="1" />
              <Popup x:Name="PART_Popup"
                AllowsTransparency="True"
                Placement="Bottom"
                PlacementTarget="{Binding ElementName=PART_TextBox}"
                StaysOpen="False" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup Name="CommonStates">
                <VisualState Name="Normal" />
                <VisualState Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="PART_DisabledVisual"
                      Storyboard.TargetProperty="Opacity"
                      To="1"
                      Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type DatePickerTextBox}"
    BasedOn="{StaticResource {x:Type TextBoxBase}}"
    TargetType="{x:Type DatePickerTextBox}">
    <Setter Property="AllowDrop" Value="True" />
    <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource TextControlElevationBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="CaretBrush" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="Padding" Value="12,5,36,7" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="SelectionBrush" Value="{DynamicResource AccentFillColorSelectedTextBackgroundBrush}" />
    <Setter Property="SelectionTextBrush" Value="{DynamicResource TextOnAccentFillColorSelectedTextBrush}" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">

          <Grid>
            <Border x:Name="border"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="4"
              SnapsToDevicePixels="True" />

            <ContentControl x:Name="PART_Watermark"
              Margin="{TemplateBinding Padding}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              Focusable="False"
              Foreground="{DynamicResource TextFillColorSecondaryBrush}"
              IsHitTestVisible="False"
              Opacity="0" />

            <ScrollViewer x:Name="PART_ContentHost"
              Focusable="False"
              HorizontalScrollBarVisibility="Hidden"
              VerticalScrollBarVisibility="Hidden" />

            <Border x:Name="borderAccent"
              CornerRadius="4"
              SnapsToDevicePixels="True" />
            <VisualStateManager.VisualStateGroups>

              <VisualStateGroup Name="WatermarkStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="Unwatermarked" />
                <VisualState Name="Watermarked">
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="PART_ContentHost"
                      Storyboard.TargetProperty="Opacity"
                      To="0"
                      Duration="0" />
                    <DoubleAnimation
                      Storyboard.TargetName="PART_Watermark"
                      Storyboard.TargetProperty="Opacity"
                      To="1"
                      Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>

              <VisualStateGroup Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                  <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                </VisualStateGroup.Transitions>
                <VisualState Name="Normal" />
                <VisualState Name="MouseOver" />
              </VisualStateGroup>

              <VisualStateGroup Name="FocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="Unfocused" />
                <VisualState Name="Focused" />
              </VisualStateGroup>

            </VisualStateManager.VisualStateGroups>
          </Grid>

          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
              <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
              <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter TargetName="border" Property="Background" Value="{DynamicResource ControlFillColorInputActiveBrush}" />
              <Setter TargetName="borderAccent" Property="BorderBrush" Value="{DynamicResource AccentFillColorDefaultBrush}" />
              <Setter TargetName="borderAccent" Property="BorderThickness" Value="0,0,0,2" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True" />
          <Condition Property="IsSelectionActive" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="SelectionBrush" Value="{DynamicResource AccentFillColorSelectedTextBackgroundBrush}" />
        <Setter Property="SelectionTextBrush" Value="{DynamicResource TextOnAccentFillColorSelectedTextBrush}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>