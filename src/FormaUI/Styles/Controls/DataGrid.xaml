<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:behaviors="clr-namespace:FormaUI.Behaviors">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/FormaUI;component/Styles/Values/Text.xaml" />
    <ResourceDictionary Source="pack://application:,,,/FormaUI;component/Styles/Controls/Button.xaml" />
    <ResourceDictionary Source="pack://application:,,,/FormaUI;component/Styles/Controls/CheckBox.xaml" />
    <ResourceDictionary Source="pack://application:,,,/FormaUI;component/Styles/Controls/ComboBox.xaml" />
    <ResourceDictionary Source="pack://application:,,,/FormaUI;component/Styles/Controls/TextBox.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />

  <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid}, ResourceId=DataGridSelectAllButtonStyle}"
    BasedOn="{StaticResource SubtleButtonStyle}"
    TargetType="{x:Type Button}">
    <!--<Setter Property="HorizontalContentAlignment" Value="Right" />
    <Setter Property="VerticalContentAlignment" Value="Bottom" />
    <Setter Property="Padding" Value="0,0,3,5" />
    <Setter Property="Content">
      <Setter.Value>
        <Polygon HorizontalAlignment="Right"
                 VerticalAlignment="Bottom"
                 Height="5"
                 Fill="{DynamicResource TextFillColorTertiaryBrush}"
                 Stretch="Uniform"
                 Points="0,10 10,10 10,0" />
      </Setter.Value>
    </Setter>-->
  </Style>

  <Style x:Key="{x:Type DataGrid}" TargetType="{x:Type DataGrid}">

    <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FontFamily" Value="{DynamicResource ControlFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
    <Setter Property="FontWeight" Value="{DynamicResource BodyFontWeight}" />

    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />

    <!--<Setter Property="GridLinesVisibility" Value="None" />-->
    <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DividerStrokeColorDefaultBrush}" />
    <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DividerStrokeColorDefaultBrush}" />

    <Setter Property="Padding" Value="4,1" />

    <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />

    <Setter Property="behaviors:DataGridBehaviors.ApplyFuentStyles" Value="True" />

    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGrid}">
          <Border
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="4"
            SnapsToDevicePixels="True">
            <ScrollViewer Focusable="False">
              <ScrollViewer.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Button
                      Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=CellsPanelHorizontalOffset}"
                      Command="{x:Static DataGrid.SelectAllCommand}"
                      Focusable="False"
                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid},
                                                                    ResourceId=DataGridSelectAllButtonStyle}}"
                      Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}}" />
                    <DataGridColumnHeadersPresenter Name="PART_ColumnHeadersPresenter"
                      Grid.Column="1"
                      Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}}" />

                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                      Grid.Row="1"
                      Grid.ColumnSpan="2"
                      CanContentScroll="{TemplateBinding CanContentScroll}" />

                    <ScrollBar Name="PART_VerticalScrollBar"
                      Grid.Row="1"
                      Grid.Column="2"
                      Maximum="{TemplateBinding ScrollableHeight}"
                      Orientation="Vertical"
                      ViewportSize="{TemplateBinding ViewportHeight}"
                      Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                      Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />

                    <Grid Grid.Row="2" Grid.Column="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <ScrollBar Name="PART_HorizontalScrollBar"
                        Grid.Column="1"
                        Maximum="{TemplateBinding ScrollableWidth}"
                        Orientation="Horizontal"
                        ViewportSize="{TemplateBinding ViewportWidth}"
                        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                        Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />

                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ScrollViewer.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping" Value="True" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="{x:Type DataGridColumnHeadersPresenter}" TargetType="{x:Type DataGridColumnHeadersPresenter}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
          <Grid>
            <DataGridColumnHeader Name="PART_FillerColumnHeader" IsHitTestVisible="False" />
            <ItemsPresenter />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Cursor" Value="SizeWE" />
    <Setter Property="Width" Value="8" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Cursor" Value="SizeNS" />
    <Setter Property="Height" Value="8" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Static DataGridColumnHeader.ColumnFloatingHeaderStyleKey}" TargetType="{x:Type Control}">
    <Setter Property="BorderBrush" Value="#FF688CAF" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Opacity" Value="0.6" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Control}">
          <Border
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Canvas Name="PART_VisualBrushCanvas" Margin="{TemplateBinding Margin}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Static DataGridColumnHeader.ColumnHeaderDropSeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Background" Value="#FF000080" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type DataGridRow}" TargetType="{x:Type DataGridRow}">
    <Setter Property="Background" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
    <Setter Property="ValidationErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <TextBlock
            Margin="2,0,0,0"
            VerticalAlignment="Center"
            Foreground="Red"
            Text="!" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRow}">
          <Grid>
            <Border
              Margin="0,2"
              Padding="{TemplateBinding Padding}"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3"
              SnapsToDevicePixels="True" />
            <SelectiveScrollingGrid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>

              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>

              <DataGridCellsPresenter
                Grid.Column="1"
                ItemsPanel="{TemplateBinding ItemsPanel}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

              <DataGridDetailsPresenter
                Grid.Row="1"
                Grid.Column="1"
                SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                Visibility="{TemplateBinding DetailsVisibility}" />

              <DataGridRowHeader
                Grid.RowSpan="2"
                SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}}" />
            </SelectiveScrollingGrid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Background" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
              <Setter Property="Background" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsNewItem" Value="True">
        <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NewItemMargin}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="{x:Type DataGridCellsPresenter}" TargetType="{x:Type DataGridCellsPresenter}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCellsPresenter}">
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000" />

  <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
    <Setter Property="Background" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <Border
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
      </Trigger>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="{x:Type DataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="Background" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource SubtleFillColorTransparentBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
    <Setter Property="Padding" Value="11,6,11,8" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
          <Grid>
            <Border
              Padding="{TemplateBinding Padding}"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  RecognizesAccessKey="True"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock x:Name="Glyph"
                  Grid.Column="1"
                  Margin="7,0"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  FontFamily="{DynamicResource IconsFontFamily}"
                  FontSize="12"
                  Text="&#xE971;" />
              </Grid>
            </Border>
            <Thumb x:Name="PART_LeftHeaderGripper"
              HorizontalAlignment="Left"
              Style="{StaticResource ColumnHeaderGripperStyle}" />
            <Thumb x:Name="PART_RightHeaderGripper"
              HorizontalAlignment="Right"
              Style="{StaticResource ColumnHeaderGripperStyle}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="SortDirection" Value="{x:Null}">
              <Setter TargetName="Glyph" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="SortDirection" Value="Descending">
              <Setter TargetName="Glyph" Property="Text" Value="&#xE972;" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type DataGridRowHeader}" TargetType="{x:Type DataGridRowHeader}">
    <Setter Property="MinWidth" Value="13" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
          <Grid>
            <Border
              Padding="{TemplateBinding Padding}"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">

              <StackPanel Orientation="Horizontal">
                <ContentPresenter
                  VerticalAlignment="Center"
                  RecognizesAccessKey="True"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Control
                  SnapsToDevicePixels="False"
                  Template="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=ValidationErrorTemplate}"
                  Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=(Validation.HasError), Converter={StaticResource boolToVisibilityConverter}}" />
              </StackPanel>
            </Border>
            <Border x:Name="selector"
              Width="3"
              Height="16"
              HorizontalAlignment="Left"
              VerticalAlignment="Center"
              Background="{DynamicResource AccentFillColorDefaultBrush}"
              CornerRadius="2"
              Visibility="Collapsed" />
            <Thumb x:Name="PART_TopHeaderGripper"
              VerticalAlignment="Top"
              Style="{StaticResource RowHeaderGripperStyle}" />
            <Thumb x:Name="PART_BottomHeaderGripper"
              VerticalAlignment="Bottom"
              Style="{StaticResource RowHeaderGripperStyle}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsRowSelected" Value="True">
              <Setter TargetName="selector" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="selector" Property="Height" Value="10" />
              <Setter TargetName="selector" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="selector" Property="Background" Value="{DynamicResource AccentFillColorDisabledBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Static behaviors:DataGridStyles.TextBoxStyleKey}" TargetType="{x:Type TextBlock}">
    <Setter Property="Padding" Value="11,6,11,8" />
  </Style>

  <Style x:Key="{x:Static behaviors:DataGridStyles.TextBoxEditingStyleKey}"
    BasedOn="{StaticResource {x:Type TextBox}}"
    TargetType="{x:Type TextBox}">
    <Setter Property="Padding" Value="11,6,11,8" />
  </Style>

  <Style x:Key="{x:Static behaviors:DataGridStyles.ComboBoxStyleKey}"
    BasedOn="{StaticResource {x:Type ComboBox}}"
    TargetType="{x:Type ComboBox}">
    <Setter Property="Padding" Value="11,6,11,8" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <ContentPresenter
            Margin="{TemplateBinding Padding}"
            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
            Content="{TemplateBinding SelectionBoxItem}"
            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
            IsHitTestVisible="False"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Background" Value="{DynamicResource ControlFillColorDisabledBrush}" />
              <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Static behaviors:DataGridStyles.ComboBoxEditingStyleKey}"
    BasedOn="{StaticResource {x:Type ComboBox}}"
    TargetType="{x:Type ComboBox}">
    <Setter Property="Padding" Value="11,6,11,8" />
  </Style>

  <Style x:Key="{x:Static behaviors:DataGridStyles.CheckBoxStyleKey}"
    BasedOn="{StaticResource {x:Type CheckBox}}"
    TargetType="{x:Type CheckBox}">
    <Setter Property="IsHitTestVisible" Value="False" />
    <Setter Property="Margin" Value="6,6,8,8" />
    <Setter Property="HorizontalAlignment" Value="Center" />
  </Style>

  <Style x:Key="{x:Static behaviors:DataGridStyles.CheckBoxEditingStyleKey}"
    BasedOn="{StaticResource {x:Type CheckBox}}"
    TargetType="{x:Type CheckBox}">
    <Setter Property="Margin" Value="6,6,8,8" />
    <Setter Property="HorizontalAlignment" Value="Center" />
  </Style>

</ResourceDictionary>